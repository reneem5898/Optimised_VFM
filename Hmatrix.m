function h = Hmatrix(B, detJ)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This function returns the element h matrix (Connesson et al. 2015)
%
% Input: 1) B matrix - strain matrix
%        2) detJ - element volume (determinant of Jacobian matrix) 
%
% Output: h matrix - optimisation matrix
%
% Written by: Renee Miller
% Date modified: 19 March 2018
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Calculate H matrix for current element
% V(Shear) ~ E(fg^2(e,eVF)) = (1/2)*stdU^2*UeVF'*H*UeVF

% t = 1/3 * Tr(e*)
t = 1/3 * sum(B(1:3,:),1);

% Calculate each component of h
h1 = B(1,:)*B(1,:)' * (B(1,:) - t)'*(B(1,:) - t) + B(1,:)*B(4,:)' * (B(1,:) - t)'*(0.5*B(4,:)) + ...
    B(1,:)*B(5,:)' * (B(1,:) - t)'*(0.5*B(5,:));
h2 = B(2,:)*B(2,:)' * (B(2,:) - t)'*(B(2,:) - t) + B(2,:)*B(4,:)' * (B(2,:) - t)'*(0.5*B(4,:)) + ...
    B(2,:)*B(6,:)' * (B(2,:) - t)'*(0.5*B(6,:));
h3 = B(3,:)*B(3,:)' * (B(3,:) - t)'*(B(3,:) - t) + B(3,:)*B(5,:)' * (B(3,:) - t)'*(0.5*B(5,:)) + ...
    B(3,:)*B(6,:)' * (B(3,:) - t)'*(0.5*B(6,:));

h12 = B(4,:)*B(1,:)' * (0.5*B(4,:))'*(B(1,:) - t) + B(4,:)*B(2,:)' * (0.5*B(4,:))'*(B(2,:) - t) + ...
    B(4,:)*B(4,:)' * (0.5*B(4,:))'*(0.5*B(4,:)) + B(4,:)*B(5,:)' * (0.5*B(4,:))'*(0.5*B(5,:)) + ...
    B(4,:)*B(6,:)' * (0.5*B(4,:))'*(0.5*B(6,:));
h13 = B(5,:)*B(1,:)' * (0.5*B(5,:))'*(B(1,:) - t) + B(5,:)*B(3,:)' * (0.5*B(5,:))'*(B(3,:) - t) + ...
    B(5,:)*B(4,:)' * (0.5*B(5,:))'*(0.5*B(4,:)) + B(5,:)*B(5,:)' * (0.5*B(5,:))'*(0.5*B(5,:)) + ...
    B(5,:)*B(6,:)' * (0.5*B(5,:))'*(0.5*B(6,:));
h23 = B(6,:)*B(2,:)' * (0.5*B(6,:))'*(B(2,:) - t) + B(6,:)*B(3,:)' * (0.5*B(6,:))'*(B(3,:) - t) + ...
    B(6,:)*B(4,:)' * (0.5*B(6,:))'*(0.5*B(4,:)) + B(6,:)*B(5,:)' * (0.5*B(6,:))'*(0.5*B(5,:)) + ...
    B(6,:)*B(6,:)' * (0.5*B(6,:))'*(0.5*B(6,:));

% h1 = (B(1,:)'*B(1,:)) .* ((B(1,:) - t)'*(B(1,:) - t)) + (B(1,:)'*B(4,:)) .* ((B(1,:) - t)'*(0.5*B(4,:))) + ...
%     (B(1,:)'*B(5,:)) .* ((B(1,:) - t)'*(0.5*B(5,:)));
% h2 = (B(2,:)'*B(2,:)) .* ((B(2,:) - t)'*(B(2,:) - t)) + (B(2,:)'*B(4,:)) .* ((B(2,:) - t)'*(0.5*B(4,:))) + ...
%     (B(2,:)'*B(6,:)) .* ((B(2,:) - t)'*(0.5*B(6,:)));
% h3 = (B(3,:)'*B(3,:)) .* ((B(3,:) - t)'*(B(3,:) - t)) + (B(3,:)'*B(5,:)) .* ((B(3,:) - t)'*(0.5*B(5,:))) + ...
%     (B(3,:)'*B(6,:)) .* ((B(3,:) - t)'*(0.5*B(6,:)));
% 
% h12 = (B(4,:)'*B(1,:)) .* ((0.5*B(4,:))'*(B(1,:) - t)) + (B(4,:)'*B(2,:)) .* ((0.5*B(4,:))'*(B(2,:) - t)) + ...
%     (B(4,:)'*B(4,:)) .* ((0.5*B(4,:))'*(0.5*B(4,:))) + (B(4,:)'*B(5,:)) .* ((0.5*B(4,:))'*(0.5*B(5,:))) + ...
%     (B(4,:)'*B(6,:)) .* ((0.5*B(4,:))'*(0.5*B(6,:)));
% h13 = (B(5,:)'*B(1,:)) .* ((0.5*B(5,:))'*(B(1,:) - t)) + (B(5,:)'*B(3,:)) .* ((0.5*B(5,:))'*(B(3,:) - t)) + ...
%     (B(5,:)'*B(4,:)) .* ((0.5*B(5,:))'*(0.5*B(4,:))) + (B(5,:)'*B(5,:)) .* ((0.5*B(5,:))'*(0.5*B(5,:))) + ...
%     (B(5,:)'*B(6,:)) .* ((0.5*B(5,:))'*(0.5*B(6,:)));
% h23 = (B(6,:)'*B(2,:)) .* ((0.5*B(6,:))'*(B(2,:) - t)) + (B(6,:)'*B(3,:)) .* ((0.5*B(6,:))'*(B(3,:) - t)) + ...
%     (B(6,:)'*B(4,:)) .* ((0.5*B(6,:))'*(0.5*B(4,:))) + (B(6,:)'*B(5,:)) .* ((0.5*B(6,:))'*(0.5*B(5,:))) + ...
%     (B(6,:)'*B(6,:)) .* ((0.5*B(6,:))'*(0.5*B(6,:)));

h = (detJ^2)*(h1 + h2 + h3 + h12 + h13 + h23); %Hg